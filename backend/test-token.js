const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://dunoqqbkgfkdndfvjhep.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR1bm9xcWJrZ2ZrZG5kZnZqaGVwIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NzExMzY4OCwiZXhwIjoyMDcyNjg5Njg4fQ.G1O5Y8749iGB9SCKNB_uVVCouIRidzXh_DKdOXfSMhg';

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function generateTestToken() {
  try {
    // Create a session token for our test user
    const { data, error } = await supabase.auth.admin.generateLink({
      type: 'magiclink',
      email: 'testuser@example.com',
      options: {
        redirectTo: 'http://localhost:3000'
      }
    });

    if (error) {
      console.error('Error generating link:', error);
      return;
    }

    console.log('Magic link data:', data);

    // Try to create a session directly
    const { data: sessionData, error: sessionError } = await supabase.auth.admin.createUser({
      email: 'testuser@example.com',
      email_confirm: true,
      user_metadata: { name: 'Test User' }
    });

    if (sessionError) {
      console.error('Session error:', sessionError);
    } else {
      console.log('User created/found:', sessionData.user?.id);
      console.log('Access token would be generated by frontend login');
    }

  } catch (err) {
    console.error('Error:', err);
  }
}

generateTestToken();